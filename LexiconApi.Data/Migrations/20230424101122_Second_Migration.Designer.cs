// <auto-generated />
using System;
using LexiconApi.Data.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LexiconApi.Data.Migrations
{
    [DbContext(typeof(LexiconDBContext))]
    [Migration("20230424101122_Second_Migration")]
    partial class Second_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LexiconApi.Data.Models.Attorney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JurisdictionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("AttorneyId");

                    b.HasIndex("JurisdictionId");

                    b.ToTable("Attorneys");
                });

            modelBuilder.Entity("LexiconApi.Data.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("LexiconApi.Data.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttorneyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HoursWorked")
                        .HasColumnType("int");

                    b.Property<int>("MatterId")
                        .HasColumnType("int");

                    b.Property<float?>("TotalAmount")
                        .HasColumnType("real");

                    b.HasKey("Id")
                        .HasName("InvoiceId");

                    b.HasIndex("AttorneyId");

                    b.HasIndex("MatterId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("LexiconApi.Data.Models.Jurisdiction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("JurisdictionId");

                    b.ToTable("Jurisdictions");
                });

            modelBuilder.Entity("LexiconApi.Data.Models.Matter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingAttorneyId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("JurisdictionId")
                        .HasColumnType("int");

                    b.Property<int>("ResponsibleAttorneyId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("MatterId");

                    b.HasIndex("BillingAttorneyId");

                    b.HasIndex("ClientId");

                    b.HasIndex("JurisdictionId");

                    b.HasIndex("ResponsibleAttorneyId");

                    b.ToTable("Matters");
                });

            modelBuilder.Entity("LexiconApi.Data.Models.Attorney", b =>
                {
                    b.HasOne("LexiconApi.Data.Models.Jurisdiction", "Jurisdiction")
                        .WithMany("Attorneys")
                        .HasForeignKey("JurisdictionId");

                    b.Navigation("Jurisdiction");
                });

            modelBuilder.Entity("LexiconApi.Data.Models.Invoice", b =>
                {
                    b.HasOne("LexiconApi.Data.Models.Attorney", "Attorney")
                        .WithMany("Invoices")
                        .HasForeignKey("AttorneyId");

                    b.HasOne("LexiconApi.Data.Models.Matter", "Matter")
                        .WithMany("Invoices")
                        .HasForeignKey("MatterId");

                    b.Navigation("Attorney");

                    b.Navigation("Matter");
                });

            modelBuilder.Entity("LexiconApi.Data.Models.Matter", b =>
                {
                    b.HasOne("LexiconApi.Data.Models.Attorney", "BillingAttorney")
                        .WithMany("BillingAttorneyMatters")
                        .HasForeignKey("BillingAttorneyId");

                    b.HasOne("LexiconApi.Data.Models.Client", "Client")
                        .WithMany("Matters")
                        .HasForeignKey("ClientId");

                    b.HasOne("LexiconApi.Data.Models.Jurisdiction", "Jurisdiction")
                        .WithMany("Matters")
                        .HasForeignKey("JurisdictionId");

                    b.HasOne("LexiconApi.Data.Models.Attorney", "ResponsibleAttorney")
                        .WithMany("ResponsibleAttorneyMatters")
                        .HasForeignKey("ResponsibleAttorneyId");

                    b.Navigation("BillingAttorney");

                    b.Navigation("Client");

                    b.Navigation("Jurisdiction");

                    b.Navigation("ResponsibleAttorney");
                });

            modelBuilder.Entity("LexiconApi.Data.Models.Attorney", b =>
                {
                    b.Navigation("BillingAttorneyMatters");

                    b.Navigation("Invoices");

                    b.Navigation("ResponsibleAttorneyMatters");
                });

            modelBuilder.Entity("LexiconApi.Data.Models.Client", b =>
                {
                    b.Navigation("Matters");
                });

            modelBuilder.Entity("LexiconApi.Data.Models.Jurisdiction", b =>
                {
                    b.Navigation("Attorneys");

                    b.Navigation("Matters");
                });

            modelBuilder.Entity("LexiconApi.Data.Models.Matter", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
